name: XAPK Patch Release

on:
  workflow_dispatch:
  repository_dispatch: # 用于 API 调用
    types: [trigger-patch]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      RESULT_DIR: result

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 22

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-client jq unzip wget curl

      - name: Prepare environment variables
        run: |
          mkdir -p $RESULT_DIR
        shell: bash

      # ---------------------------
      # 远程 wget XAPK 到服务器
      # ---------------------------
      # - name: Write SSH Key
      #   run: |
      #     echo "${{ secrets.SERVER_SSH_KEY }}" > /tmp/id_rsa
      #     chmod 600 /tmp/id_rsa

      # - name: Remote wget XAPK to server
      #   run: |
      #     ssh -o StrictHostKeyChecking=no -i /tmp/id_rsa -p ${{ secrets.SERVER_PORT }} \
      #       ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} <<'EOF'
      #       set -eux
      #       mkdir -p /opt/linkura-localify-auto-release-web/data
      #       cd /opt/linkura-localify-auto-release-web/data
      #       wget -O latest.apk \
      #         --user-agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64)" \
      #         "https://d.apkpure.com/b/XAPK/com.oddno.lovelive?version=latest"
      #     EOF

      - name: Copy XAPK from server
        run: |
          scp -o StrictHostKeyChecking=no -i /tmp/id_rsa -P ${{ secrets.SERVER_PORT }} \
            ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/opt/linkura-localify-auto-release-web/data/latest.apk \
            ./app.xapk

      # ---------------------------
      # 下载 linkura-localify 最新版本
      # ---------------------------
      - name: Download linkura-localify apk
        run: |
          if [[ -n "${{ github.event.client_payload.linkura_version }}" ]]; then
            LINKURA_VERSION="${{ github.event.client_payload.linkura_version }}"
            LOCALIFY_VERSION="${{ github.event.client_payload.linkura_localify_version }}"
          else
            LINKURA_VERSION="手动"
            LOCALIFY_VERSION="手动"
          fi
          echo "LINKURA_VERSION=$LINKURA_VERSION" >> $GITHUB_ENV
          echo "LOCALIFY_VERSION=$LOCALIFY_VERSION" >> $GITHUB_ENV

          # 获取最新 release 中 arm64-v8a debug apk
          URL=$(curl -s https://api.github.com/repos/ChocoLZS/linkura-localify/releases/latest \
            | jq -r '.assets[] | select(.name | test("linkura-localify-.*-debug-arm64-v8a\\.apk")) | .browser_download_url' \
            | head -n1)
          wget -O linkura-localify.apk "$URL"
          ls -lh linkura-localify.apk

      # ---------------------------
      # Expand XAPK
      # ---------------------------
      - name: Expand XAPK
        run: unzip -o app.xapk -d app

      # ---------------------------
      # Run APKEditor
      # ---------------------------
      - name: Run APKEditor
        run: java -jar APKEditor.jar m -i app/

      # ---------------------------
      # Copy merged APK & patch
      # ---------------------------
      - name: Run LSPatch
        run: |
          MERGED_APK=$(find . -maxdepth 1 -name "*_merged.apk" | head -n1)
          if [ -z "$MERGED_APK" ]; then
            echo "❌ 未找到 _merged.apk"
            exit 1
          fi
          echo "MERGED_APK=$MERGED_APK"

          mkdir -p $RESULT_DIR

          MERGED_NAME="linkura_merged_${LINKURA_VERSION}.apk"
          PATCHED_NAME="linkura_merged_lspatched_${LINKURA_VERSION}.apk"

          cp "$MERGED_APK" "$RESULT_DIR/$MERGED_NAME"

          java -jar lspatch.jar "$MERGED_APK" -m linkura-localify.apk -o "$RESULT_DIR"
          # 默认输出文件名 *_lspatched.apk，重命名
          PATCHED_APK=$(find "$RESULT_DIR" -maxdepth 1 -name "*_lspatched.apk" | head -n1)
          if [ -z "$PATCHED_APK" ]; then
            echo "❌ 未生成 patched APK"
            exit 1
          fi
          mv "$PATCHED_APK" "$RESULT_DIR/$PATCHED_NAME"
          ls -lh $RESULT_DIR

      # ---------------------------
      # Upload release
      # ---------------------------
      - name: Upload Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.LINKURA_VERSION }}
          name: "Linkura Patch ${{ env.LINKURA_VERSION }}"
          body: |
            Linkura Version: ${{ env.LINKURA_VERSION }}
            Linkura-Localify Version: ${{ env.LOCALIFY_VERSION }}
            Date: $(date -u)
          owner: ${{ github.repository_owner }}
          repo: ${{ github.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: result/*
